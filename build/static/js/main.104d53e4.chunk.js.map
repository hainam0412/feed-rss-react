{"version":3,"sources":["components/Article.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Article","articles","loading","time","start","end","feed","filterArticles","entries","filter","article","Date","pubDate","getTime","length","className","map","index","title","content","href","link","target","rel","Form","state","handleSubmit","e","preventDefault","props","handleTime","alert","handleChange","setState","id","value","this","action","onSubmit","htmlFor","type","onChange","Component","App","useState","setArticles","setLoading","setTime","useEffect","a","parser","parseURL","CORS_PROXY","err","fetchArticles","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.104d53e4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Markup } from \"interweave\";\n\nconst Article = ({ articles, loading, time }) => {\n    const { start, end } = time;\n\n    if (articles.feed && !loading) {\n        if (start != null && end != null) {\n            const filterArticles = articles.feed.entries.filter((article) => {\n                return (\n                    new Date(article.pubDate).getTime() > new Date(start).getTime() &&\n                    new Date(article.pubDate).getTime() < new Date(end).getTime()\n                );\n            });\n\n            return filterArticles.length > 0 ? (\n                <div className=\"row\">\n                    {filterArticles.map((article, index) => (\n                        <div key={index} className=\"item mb-5\">\n                            <h4>{article.title}</h4>\n                            <p>{article.pubDate}</p>\n                            <div>\n                                <Markup content={article.content} />\n                            </div>\n                            <a href={article.link} target=\"_blank\" rel=\"noreferrer\">\n                                More\n                            </a>\n                        </div>\n                    ))}\n                </div>\n            ) : (\n                <div>No articles in the times</div>\n            );\n        } else {\n            return (\n                <div className=\"row\">\n                    {articles.feed.entries.map((article, index) => (\n                        <div key={index} className=\"item mb-5\">\n                            <h4>{article.title}</h4>\n                            <p>{article.pubDate}</p>\n                            <div>\n                                <Markup content={article.content} />\n                            </div>\n                            <a href={article.link} target=\"_blank\" rel=\"noreferrer\">\n                                More\n                            </a>\n                        </div>\n                    ))}\n                </div>\n            );\n        }\n    } else {\n        return <div>Loading...</div>;\n    }\n};\n\nexport default Article;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n    state = {\n        start: null,\n        end: null,\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.start != null && this.state.end != null) {\n            this.props.handleTime(this.state);\n        } else {\n            alert(\"The time must not be null\");\n        }\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        });\n    };\n\n    render() {\n        return this.props.loading ? null : (\n            <div>\n                <form action=\"\" id=\"form\" onSubmit={this.handleSubmit}>\n                    <div className=\"form-item mb-3\">\n                        <label htmlFor=\"start\">Start</label>\n                        <input\n                            type=\"date\"\n                            id=\"start\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <div className=\"form-item mb-3\">\n                        <label htmlFor=\"end\">End</label>\n                        <input\n                            type=\"date\"\n                            id=\"end\"\n                            className=\"form-control\"\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <div className=\"form-item\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Article from \"./components/Article\";\nimport Form from \"./components/Form\";\nimport parser from \"rss-parser\";\n\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\nconst URL = \"https://vnexpress.net/rss/suc-khoe.rss\";\n\nconst App = () => {\n    const [articles, setArticles] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [time, setTime] = useState([]);\n\n    useEffect(() => {\n        const fetchArticles = async () => {\n            setLoading(true);\n            await parser.parseURL(CORS_PROXY + URL, (err, feed) => {\n                if (err) throw err;\n                setArticles(feed);\n                setLoading(false);\n            });\n        };\n        fetchArticles();\n    }, []);\n\n    const handleTime = (time) => {\n        setTime(time);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"text-center mb-5\">Feed Articles from RSS</h1>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-4\">\n                        <Form loading={loading} handleTime={handleTime} />\n                    </div>\n                    <div className=\"col-8\">\n                        <div className=\"container\">\n                            <Article articles={articles} loading={loading} time={time} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}